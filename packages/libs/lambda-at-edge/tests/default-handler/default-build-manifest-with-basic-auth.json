{
  "buildId": "build-id2",
  "logLambdaExecutionTimes": false,
  "pages": {
    "ssr": {
      "dynamic": {
        "/blog/:id": {
          "file": "pages/blog/[id].js",
          "regex": "^\\/blog(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/customers/:customer": {
          "file": "pages/customers/[customer].js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/customers/:customer/profile": {
          "file": "pages/customers/[customer]/profile.js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))\\/profile[\\/#\\?]?$"
        },
        "/customers/:customer/:post": {
          "file": "pages/customers/[customer]/[post].js",
          "regex": "^\\/customers(?:\\/([^\\/#\\?]+?))(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fallback/:slug": {
          "file": "pages/fallback/[slug].js",
          "regex": "^\\/fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/fallback-blocking/:slug": {
          "file": "pages/fallback-blocking/[slug].js",
          "regex": "^\\/fallback-blocking(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/no-fallback/:slug": {
          "file": "pages/no-fallback/[slug].js",
          "regex": "^\\/no-fallback(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        },
        "/:root": {
          "file": "pages/[root].js",
          "regex": "^(?:\\/([^\\/#\\?]+?))[\\/#\\?]?$"
        }
      },
      "catchAll": {
        "/customers/:catchAll*": {
          "file": "pages/customers/[...catchAll].js",
          "regex": "^\\/customers(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        }
      },
      "nonDynamic": {
        "/async-page": "pages/async-page.js",
        "/customers": "pages/customers.js",
        "/customers/new": "pages/customers/new.js",
        "/erroredPage": "pages/erroredPage.js",
        "/": "pages/index.js",
        "/preview": "pages/preview.js",
        "/_error": "pages/_error.js"
      }
    },
    "html": {
      "dynamic": {
        "/users/:user*": {
          "file": "pages/users/[...user].html",
          "regex": "^\\/users(?:\\/((?:[^\\/#\\?]+?)(?:\\/(?:[^\\/#\\?]+?))*))?[\\/#\\?]?$"
        }
      },
      "nonDynamic": {
        "/terms": "pages/terms.html",
        "/404": "pages/404.html"
      }
    },
    "ssg": {
      "dynamic": {
        "/fallback-blocking/[slug]": {
          "routeRegex": "^/fallback\\-blocking/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id2/fallback-blocking/[slug].json",
          "fallback": null,
          "dataRouteRegex": "^/_next/data/build\\-id2/fallback\\-blocking/([^/]+?)\\.json$"
        },
        "/fallback/[slug]": {
          "routeRegex": "^/fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id2/fallback/[slug].json",
          "fallback": "/fallback/[slug].html",
          "dataRouteRegex": "^/_next/data/build\\-id2/fallback/([^/]+?)\\.json$"
        },
        "/no-fallback/[slug]": {
          "routeRegex": "^/no\\-fallback/([^/]+?)(?:/)?$",
          "dataRoute": "/_next/data/build-id2/no-fallback/[slug].json",
          "fallback": false,
          "dataRouteRegex": "^/_next/data/build\\-id2/no\\-fallback/([^/]+?)\\.json$"
        }
      },
      "nonDynamic": {
        "/fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/fallback/[slug]",
          "dataRoute": "/_next/data/build-id2/fallback/example-static-page.json"
        },
        "/": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id2/index.json"
        },
        "/no-fallback/example-static-page": {
          "initialRevalidateSeconds": false,
          "srcRoute": "/no-fallback/[slug]",
          "dataRoute": "/_next/data/build-id2/no-fallback/example-static-page.json"
        },
        "/preview": {
          "initialRevalidateSeconds": false,
          "srcRoute": null,
          "dataRoute": "/_next/data/build-id2/preview.json"
        }
      }
    }
  },
  "publicFiles": {
    "/favicon.ico": "favicon.ico",
    "/file with spaces.json": "file with spaces.json",
    "/manifest.json": "manifest.json"
  },
  "trailingSlash": false,
  "domainRedirects": {
    "example.com": "https://www.example.com"
  },
  "authentication": {
    "username": "test",
    "password": "123"
  },
  "enableHTTPCompression": false
}
